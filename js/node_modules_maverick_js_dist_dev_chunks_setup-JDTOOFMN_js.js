"use strict";
(self["webpackChunktailpress"] = self["webpackChunktailpress"] || []).push([["node_modules_maverick_js_dist_dev_chunks_setup-JDTOOFMN_js"],{

/***/ "./node_modules/maverick.js/dist/dev/chunks/setup-JDTOOFMN.js":
/*!********************************************************************!*\
  !*** ./node_modules/maverick.js/dist/dev/chunks/setup-JDTOOFMN.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setup": () => (/* binding */ setup)
/* harmony export */ });
/* harmony import */ var _chunk_HXFROLDL_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-HXFROLDL.js */ "./node_modules/maverick.js/dist/dev/chunks/chunk-HXFROLDL.js");
/* harmony import */ var _chunk_BKACTARQ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-BKACTARQ.js */ "./node_modules/maverick.js/dist/dev/chunks/chunk-BKACTARQ.js");
/* harmony import */ var _chunk_BKACTARQ_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-BKACTARQ.js */ "./node_modules/@maverick-js/signals/dist/dev/chunks/chunk-TR5KFJUP.js");




// src/element/setup.ts
async function setup($el) {
  const parent = findParent($el);
  const ctor = $el.constructor, definition = ctor._definition;
  if (parent) {
    await customElements.whenDefined(parent.localName);
    parent[_chunk_BKACTARQ_js__WEBPACK_IMPORTED_MODULE_0__.CONNECT] === true || await new Promise((res) => parent[_chunk_BKACTARQ_js__WEBPACK_IMPORTED_MODULE_0__.CONNECT].push(res));
  }
  if ($el.isConnected) {
    const instance = (0,_chunk_HXFROLDL_js__WEBPACK_IMPORTED_MODULE_1__.createElementInstance)(definition, {
      props: resolvePropsFromAttrs($el),
      scope: parent?.instance[_chunk_BKACTARQ_js__WEBPACK_IMPORTED_MODULE_2__.SCOPE]
    });
    if (parent?.keepAlive)
      $el.keepAlive = true;
    $el.attachComponent(instance);
  }
}
function resolvePropsFromAttrs($el) {
  const ctor = $el.constructor, props = {};
  if (!ctor._attrToProp)
    return props;
  for (const attrName of ctor._attrToProp.keys()) {
    if ($el.hasAttribute(attrName)) {
      const propName = ctor._attrToProp.get(attrName);
      const convert = ctor._definition.props[propName].type?.from;
      if (convert) {
        const attrValue = $el.getAttribute(attrName);
        props[propName] = convert(attrValue);
      }
    }
  }
  return props;
}
function findParent($el) {
  let ctor = $el.constructor, node = $el.parentNode, prefix = ctor._definition.tagName.split("-", 1)[0] + "-";
  while (node) {
    if (node.nodeType === 1 && node.localName.startsWith(prefix)) {
      return node;
    }
    node = node.parentNode;
  }
  return null;
}




/***/ })

}]);